name: Publish RustRetail.SharedKernel to NuGet

on:
  push:
    branches:
      - main
    paths:
      - "src/RustRetail.SharedKernel/**"
      - ".github/workflows/publish-shared-kernel.yml"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "9.0.x"

      - name: Extract version from .csproj
        id: get_version
        run: |
          version=$(grep -oPm1 "(?<=<Version>)[^<]+" src/RustRetail.SharedKernel/RustRetail.SharedKernel.csproj)
          echo "version=$version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Check if version already exists on NuGet
        id: check_nuget
        run: |
         PACKAGE_ID="rustretail.sharedkernel"
         VERSION=${{ steps.get_version.outputs.version }}
         echo "Checking for $PACKAGE_ID_LOWER/$VERSION_LOWER at URL https://api.nuget.org/v3-flatcontainer/$PACKAGE_ID/$VERSION/$PACKAGE_ID.$VERSION.nupkg"
         EXISTS=$(curl -s -o /dev/null -w "%{http_code}" "https://api.nuget.org/v3-flatcontainer/$PACKAGE_ID/$VERSION/$PACKAGE_ID.$VERSION.nupkg")
         echo "Http response code: $EXISTS"
         if [ "$EXISTS" == "200" ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
         else
          echo "exists=false" >> $GITHUB_OUTPUT
         fi

      - name: Skip if version already exists
        if: steps.check_nuget.outputs.exists == 'true'
        run: |
         echo "Version ${{ steps.get_version.outputs.version }} already exists. Skipping publish."
         exit 0

      - name: Restore
        if: steps.check_nuget.outputs.exists != 'true'
        run: dotnet restore src/RustRetail.SharedKernel/RustRetail.SharedKernel.csproj

      - name: Build
        if: steps.check_nuget.outputs.exists != 'true'
        run: dotnet build src/RustRetail.SharedKernel/RustRetail.SharedKernel.csproj --configuration Release --no-restore

      - name: Pack
        if: steps.check_nuget.outputs.exists != 'true'
        run: dotnet pack src/RustRetail.SharedKernel/RustRetail.SharedKernel.csproj --configuration Release --no-build --output ./nupkg

      - name: Push to NuGet
        if: steps.check_nuget.outputs.exists != 'true'
        run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
